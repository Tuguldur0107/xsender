import { Page } from "puppeteer";

/**
 * CAPTCHA —Ö–∞—Ä–∞–≥–¥–∞–∂ –±–∞–π–≥–∞–∞–≥ —à–∞–ª–≥–∞—Ö
 */
export async function isCaptchaPresent(page: Page): Promise<boolean> {
  try {
    // CAPTCHA iframe, div —ç—Å–≤—ç–ª class –±–∞–π–∂ –±–æ–ª–Ω–æ ‚Äî etax –¥—ç—ç—Ä —Ç–∞–∞—Ä—É—É–ª–∂ ”©”©—Ä—á–∏–ª–Ω”©
    const captchaSelector = "iframe[src*='captcha']"; // –∂–∏—à—ç—ç
    await page.waitForSelector(captchaSelector, { timeout: 3000 });
    console.log("üîí CAPTCHA –∏–ª—ç—Ä–ª—ç—ç");
    return true;
  } catch {
    return false;
  }
}

/**
 * CAPTCHA —ç—Å–≤—ç–ª –∞–ª–¥–∞–∞ popup –≥–∞—Ä—Å–∞–Ω –±–æ–ª –∑–æ–≥—Å–æ–æ—Ö
 */
export async function blockIfCaptcha(page: Page) {
  const hasCaptcha = await isCaptchaPresent(page);
  if (hasCaptcha) {
    throw new Error("‚ùå CAPTCHA –∏–ª—ç—Ä—Å—ç–Ω —Ç—É–ª –∞–≤—Ç–æ–º–∞—Ç–∞–∞—Ä “Ø—Ä–≥—ç–ª–∂–ª“Ø“Ø–ª—ç—Ö –±–æ–ª–æ–º–∂–≥“Ø–π.");
  }
}
